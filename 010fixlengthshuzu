//SPDX-License-Identifier:MIT
pragma solidity >0.6.0 <0.9.0;

contract fixlengthArray{

//定义一个只有5个元素的固定数组，数组名为numbers;
    uint[5] numbers;
//观察这个数组
    function getnumbers() public view returns(uint[5] memory)
    {
        return numbers;
    }
//初始化这个数组 ，0号位置为100，1号位置为200
    function inital() public {
        numbers[0] = 100;

        numbers[1] = 200;
    }
//往里传两个参数，一个是
    function setnumbers(uint index,uint value) public{

        numbers[index] = value;
    }
//删除指定位置的数为0
    function deletesinglenumbers(uint index) public{

        delete numbers[index];
    }
//求整个数组的和
    function addallnumbers() public view returns(uint){
        uint total = 0;

        for(uint i = 0; i < numbers.length;i++){
            //total = total + numbers[i]
            total += numbers[i];
        }

        return total;
    }
//固定长度数组的长度是只读的 不能被修改

}
